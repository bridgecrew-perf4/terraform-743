provider "aws" {

  profile = "default"

  region  = "ap-south-1"

}



#instance declaration



resource "aws_instance" "terra_demo1" {

  ami               = "ami-081bb417559035fe8"

  instance_type     = "t2.micro"

  availability_zone = "ap-south-1a"

  subnet_id         = aws_subnet.terra_subnet.id

  tags = {

    Name = "terra_demo1"

  }

}



#EBS volume attachment



resource "aws_volume_attachment" "ebs_att" {

  device_name = "/dev/sdh"

  volume_id   = aws_ebs_volume.terra_vol1.id

  instance_id = aws_instance.terra_demo1.id

}



#EBS volume declaration



resource "aws_ebs_volume" "terra_vol1" {

  availability_zone = "ap-south-1a"

  size              = 10

  encrypted         = "true"

  tags = {

    Name = "terra_vol1"

  }

}



#VPC declaration



resource "aws_vpc" "terra_vpc" {

  cidr_block = "192.168.0.0/16"

  tags = {

    Name = "terra_vpc"

  }

}



#subnet declaration



resource "aws_subnet" "terra_subnet" {

  vpc_id            = aws_vpc.terra_vpc.id

  cidr_block        = "192.168.0.0/20"

  availability_zone = "ap-south-1a"

  tags = {

    Name = "terra_subnet"

  }

}



#security groups declaration



resource "aws_security_group" "allow_tls" {

  name        = "allow_tls"

  description = "Allow TLS inbound traffic"

  vpc_id      = aws_vpc.terra_vpc.id



  ingress {

    description = "TLS from VPC"

    from_port   = "443"

    to_port     = "443"

    protocol    = "tcp"

    cidr_blocks = ["0.0.0.0/0"]

  }



  ingress {

    description = "TLS from VPC"

    from_port   = "80"

    to_port     = "80"

    protocol    = "tcp"

    cidr_blocks = ["0.0.0.0/0"]

  }



  ingress {

    description = "TLS from VPC"

    from_port   = "22"

    to_port     = "22"

    protocol    = "tcp"

    cidr_blocks = ["0.0.0.0/0"]

  }



  egress {

    from_port   = 0

    to_port     = 0

    protocol    = "-1"

    cidr_blocks = ["0.0.0.0/0"]

  }



  tags = {

    Name = "allow_tls"

  }

}



#route table declaration



resource "aws_route_table" "terra_route_table" {

  vpc_id = aws_vpc.terra_vpc.id



  route {

    cidr_block  = "0.0.0.0/0"

    instance_id = aws_instance.terra_demo1.id

  }



  tags = {

    Name = "terra_route_table"

  }

}



#internet gateway declaration



resource "aws_internet_gateway" "gw" {

  vpc_id = aws_vpc.terra_vpc.id



  tags = {

    Name = "terra_int"

  }

}



# subnet association



resource "aws_route_table_association" "a" {

  subnet_id      = aws_subnet.terra_subnet.id

  route_table_id = aws_route_table.terra_route_table.id

}

